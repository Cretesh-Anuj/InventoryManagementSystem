{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/services/auth.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"primeng/button\";\nimport * as i4 from \"primeng/inputtext\";\nexport class RegisterComponent {\n  constructor(authService) {\n    this.authService = authService;\n    this.validateControls = controlName => {\n      return this.registerForm?.get(controlName)?.invalid && this.registerForm?.get(controlName)?.touched;\n    };\n    this.hasError = (controlName, errorName) => {\n      return this.registerForm?.get(controlName)?.hasError(errorName);\n    };\n    this.registerUser = registerFormValue => {\n      const formValues = {\n        ...registerFormValue\n      };\n      const user = {\n        firstName: formValues.firstName,\n        lastName: formValues.lastName,\n        email: formValues.email,\n        username: formValues.username,\n        password: formValues.password,\n        confirmPassword: formValues.confirmPassword\n      };\n      this.authService.register(\"api/Authenticate/register\", user).subscribe({\n        next: _ => console.log(\"User Registered Successful\"),\n        error: err => console.log(err.error.errros)\n      });\n    };\n  }\n  ngOnInit() {\n    this.registerForm = new FormGroup({\n      firstName: new FormControl(''),\n      lastName: new FormControl(''),\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required, Validators.pattern(\"^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&-+=()])(?=\\\\S+$).{8, 20}$\")]),\n      confirmPassword: new FormControl('', Validators.required)\n    });\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 55,\n  vars: 0,\n  consts: [[1, \"register-container\"], [1, \"form\", 2, \"width\", \"50vw\", \"background-color\", \"white\"], [1, \"logo-container\", \"text-center\"], [\"src\", \"../../../assets/logo.PNG\", \"alt\", \"logo\", \"height\", \"70\"], [1, \"form-wrapper\", 2, \"max-width\", \"70%\", \"margin\", \"2rem auto\"], [1, \"field\"], [1, \"col-12\"], [\"for\", \"firstName\", 1, \"font-bold\"], [\"id\", \"firstName\", \"formControlName\", \"firstName\", \"type\", \"firstName\", \"aria-describedby\", \"firstName-help\", \"pInputText\", \"\", 1, \"w-full\"], [\"hidden\", \"\", \"id\", \"firstName-help\"], [\"for\", \"lastName\", 1, \"font-bold\"], [1, \"p-input-icon-right\", \"w-full\"], [1, \"pi\", \"pi-eye\", 2, \"font-size\", \"1.5rem\"], [\"id\", \"lastName\", \"formControlName\", \"lastName\", \"type\", \"lastName\", \"aria-describedby\", \"lastName-help\", \"pInputText\", \"\", 1, \"w-full\"], [\"hidden\", \"\", \"id\", \"lastName-help\"], [\"for\", \"username\", 1, \"font-bold\"], [\"id\", \"username\", \"formControlName\", \"username\", \"type\", \"username\", \"aria-describedby\", \"lastName-help\", \"pInputText\", \"\", 1, \"w-full\"], [\"hidden\", \"\", \"id\", \"username-help\"], [\"for\", \"password\", 1, \"font-bold\"], [\"id\", \"password\", \"formControlName\", \"password\", \"type\", \"password\", \"aria-describedby\", \"password-help\", \"pInputText\", \"\", 1, \"w-full\"], [\"hidden\", \"\", \"id\", \"password-help\"], [\"for\", \"confirmPassword\", 1, \"font-bold\"], [\"id\", \"confirmPassword\", \"formControlName\", \"confirmPassword\", \"type\", \"confirmPassword\", \"aria-describedby\", \"password-help\", \"pInputText\", \"\", 1, \"w-full\"], [\"hidden\", \"\", \"id\", \"confirmPassword-help\"], [1, \"login-actions\", \"flex\", \"flex-row\", \"justify-content-center\", \"align-items-center\"], [\"pButton\", \"\", \"pRipple\", \"\", \"type\", \"button\", \"label\", \"REGISTER\", 1, \"w-3\", \"border-round-3xl\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"main\", 0)(1, \"form\", 1)(2, \"section\", 2);\n      i0.ɵɵelement(3, \"img\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 4)(5, \"div\", 5)(6, \"div\", 6)(7, \"label\", 7);\n      i0.ɵɵtext(8, \"First Name:\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 6);\n      i0.ɵɵelement(10, \"input\", 8);\n      i0.ɵɵelementStart(11, \"small\", 9);\n      i0.ɵɵtext(12, \"Enter your first name!\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(13, \"div\", 5)(14, \"div\", 6)(15, \"label\", 10);\n      i0.ɵɵtext(16, \"Last Name:\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"div\", 6)(18, \"span\", 11);\n      i0.ɵɵelement(19, \"i\", 12)(20, \"input\", 13);\n      i0.ɵɵelementStart(21, \"small\", 14);\n      i0.ɵɵtext(22, \"Enter your Last Name!\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(23, \"div\", 5)(24, \"div\", 6)(25, \"label\", 15);\n      i0.ɵɵtext(26, \"User Name:\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(27, \"div\", 6)(28, \"span\", 11);\n      i0.ɵɵelement(29, \"i\", 12)(30, \"input\", 16);\n      i0.ɵɵelementStart(31, \"small\", 17);\n      i0.ɵɵtext(32, \"Enter your User Name!\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(33, \"div\", 5)(34, \"div\", 6)(35, \"label\", 18);\n      i0.ɵɵtext(36, \"Password:\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(37, \"div\", 6)(38, \"span\", 11);\n      i0.ɵɵelement(39, \"i\", 12)(40, \"input\", 19);\n      i0.ɵɵelementStart(41, \"small\", 20);\n      i0.ɵɵtext(42, \"Enter your Password!\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(43, \"div\", 5)(44, \"div\", 6)(45, \"label\", 21);\n      i0.ɵɵtext(46, \"Confirm Password:\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(47, \"div\", 6)(48, \"span\", 11);\n      i0.ɵɵelement(49, \"i\", 12)(50, \"input\", 22);\n      i0.ɵɵelementStart(51, \"small\", 23);\n      i0.ɵɵtext(52, \"Enter your Password!\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(53, \"div\", 24);\n      i0.ɵɵelement(54, \"button\", 25);\n      i0.ɵɵelementEnd()()()();\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgForm, i2.FormControlName, i3.ButtonDirective, i4.InputText],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","RegisterComponent","constructor","authService","controlName","registerForm","get","invalid","touched","errorName","hasError","registerFormValue","formValues","user","firstName","lastName","email","username","password","confirmPassword","register","subscribe","next","_","console","log","error","err","errros","ngOnInit","required","pattern","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\anuj.sharma\\InventoryManagementSystem\\src\\app\\authentication\\register\\register.component.ts","C:\\Users\\anuj.sharma\\InventoryManagementSystem\\src\\app\\authentication\\register\\register.component.html"],"sourcesContent":["import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { UserForRegistrationDTO } from 'src/models/UserForRegistrationDTO';\nimport { AuthService } from 'src/services/auth.service';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  registerForm!: FormGroup;\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit(): void {\n    this.registerForm = new FormGroup({\n      firstName: new FormControl(''),\n      lastName: new FormControl(''),\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required, Validators.pattern(\"^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&-+=()])(?=\\\\S+$).{8, 20}$\")]),\n      confirmPassword: new FormControl('', Validators.required)\n    });\n  }\n  public validateControls = (controlName:string)=>{\n    return this.registerForm?.get(controlName)?.invalid && this.registerForm?.get(controlName)?.touched\n  }\n  public hasError = (controlName: string, errorName: string)=> {\n    return this.registerForm?.get(controlName)?.hasError(errorName);\n  }\n  public registerUser = (registerFormValue: any)=> {\n    const formValues = {...registerFormValue};\n    const user: UserForRegistrationDTO = {\n      firstName: formValues.firstName,\n      lastName: formValues.lastName,\n      email: formValues.email,\n      username: formValues.username,\n      password: formValues.password,\n      confirmPassword: formValues.confirmPassword\n    };\n    this.authService.register(\"api/Authenticate/register\", user).subscribe({\n      next: (_)=> console.log(\"User Registered Successful\"),\n      error: (err:HttpErrorResponse)=> console.log(err.error.errros)\n    })\n  }\n\n}\n\n","<main class=\"register-container\">\n  <form class=\"form\" style=\"width: 50vw; background-color: white;\">\n    <section class=\"logo-container text-center\">\n      <img src=\"../../../assets/logo.PNG\" alt=\"logo\" height=\"70\">\n    </section>\n    <div class=\"form-wrapper\" style=\"max-width: 70%; margin: 2rem auto;\">\n      <div class=\"field\">\n        <div class=\"col-12\">\n          <label for=\"firstName\" class=\"font-bold\">First Name:</label>\n        </div>\n         <div class=\"col-12\">\n          <input id=\"firstName\" formControlName=\"firstName\" type=\"firstName\" class=\"w-full\" aria-describedby=\"firstName-help\" pInputText>\n          <small hidden id=\"firstName-help\">Enter your first name!</small>\n         </div>\n      </div>\n      <div class=\"field\">\n        <div class=\"col-12\">\n          <label for=\"lastName\" class=\"font-bold\">Last Name:</label>\n        </div>\n         <div class=\"col-12\">\n          <span class=\"p-input-icon-right w-full\">\n            <i class=\"pi pi-eye\" style=\"font-size: 1.5rem;\"></i>\n            <input id=\"lastName\" formControlName=\"lastName\" type=\"lastName\" class=\"w-full\" aria-describedby=\"lastName-help\" pInputText>\n            <small hidden id=\"lastName-help\">Enter your Last Name!</small>\n          </span>\n         </div>\n      </div>\n      <div class=\"field\">\n        <div class=\"col-12\">\n          <label for=\"username\" class=\"font-bold\">User Name:</label>\n        </div>\n         <div class=\"col-12\">\n          <span class=\"p-input-icon-right w-full\">\n            <i class=\"pi pi-eye\" style=\"font-size: 1.5rem;\"></i>\n            <input id=\"username\" formControlName=\"username\" type=\"username\" class=\"w-full\" aria-describedby=\"lastName-help\" pInputText>\n            <small hidden id=\"username-help\">Enter your User Name!</small>\n          </span>\n         </div>\n      </div>\n      <div class=\"field\">\n        <div class=\"col-12\">\n          <label for=\"password\" class=\"font-bold\">Password:</label>\n        </div>\n         <div class=\"col-12\">\n          <span class=\"p-input-icon-right w-full\">\n            <i class=\"pi pi-eye\" style=\"font-size: 1.5rem;\"></i>\n            <input id=\"password\" formControlName=\"password\" type=\"password\" class=\"w-full\" aria-describedby=\"password-help\" pInputText>\n            <small hidden id=\"password-help\">Enter your Password!</small>\n          </span>\n         </div>\n      </div>\n      <div class=\"field\">\n        <div class=\"col-12\">\n          <label for=\"confirmPassword\" class=\"font-bold\">Confirm Password:</label>\n        </div>\n         <div class=\"col-12\">\n          <span class=\"p-input-icon-right w-full\">\n            <i class=\"pi pi-eye\" style=\"font-size: 1.5rem;\"></i>\n            <input id=\"confirmPassword\" formControlName=\"confirmPassword\" type=\"confirmPassword\" class=\"w-full\" aria-describedby=\"password-help\" pInputText>\n            <small hidden id=\"confirmPassword-help\">Enter your Password!</small>\n          </span>\n         </div>\n      </div>\n      <div class=\"login-actions flex flex-row justify-content-center align-items-center\">\n        <button pButton pRipple type=\"button\" label=\"REGISTER\" class=\"w-3 border-round-3xl\"></button>\n      </div>\n    </div>\n  </form>\n  </main>\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}